name: 'Release Build'
on:
  push:
    branches:
      - master
      - main

jobs:
  build-release:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - name: Get Package Version
        id: get-package-version
        uses: stevenbenitez/get-package-version-action@v1
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Initialize the project
        run: npm run ci
      - name: Set flavour to STANDALONE
        run: npm run set-flavour STANDALONE
      - name: Set build id
        run: npm run set-build-id
      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.77.2
          default: true
          override: true
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-shared-rust
            src-elevated-sidecar
            src-core
#      - name: Install development Tauri CLI
#        run: cargo install --git https://github.com/tauri-apps/tauri --branch 1.x tauri-cli
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.get-package-version.outputs.version }}
          path: ./CHANGELOG.md
      - name: Build and release OyasumiVR
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: oyasumivr-v${{ steps.get-package-version.outputs.version }}
          releaseName: OyasumiVR v${{ steps.get-package-version.outputs.version }}
          releaseBody: ${{ steps.changelog_reader.outputs.changes }}
          releaseDraft: false
          includeUpdaterJson: true
#          tauriScript: cargo-tauri
      - name: Update the update manifest
        uses: Raphiiko/actions-deploy-gist@main
        with:
          token: ${{ secrets.GH_TOKEN_GIST }}
          gist_id: 16ed38d8ccd9282675d04478f887f76f
          file_path: latest.json
          gist_file_name: 'oyasumi_update_manifest.json'
          gist_description: OyasumiVR Update Manifest [Release Channel]
